plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
    id("io.micronaut.test-resources") version "3.6.3"
    // tag::asciidoc-plugin-id[]
    id("org.asciidoctor.jvm.convert") version "3.3.2"
    // end::asciidoc-plugin-id[]
}

version = "0.1"
group = "api"


apply from: "gradle/asciidoc.gradle"

//tag::repositories[]
repositories {
//    mavenLocal()
    mavenCentral()
}
//end::repositories[]

dependencies {
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.groovy:micronaut-hibernate-gorm")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("io.micronaut:micronaut-http-validation")
    compileOnly("io.micronaut.security:micronaut-security-annotations")
    runtimeOnly("ch.qos.logback:logback-classic")
    // tag::mysql[]
    runtimeOnly("mysql:mysql-connector-java")
    // end::mysql[]
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
//    testImplementation("org.testcontainers:spock")
//    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")

    // tag::h2[]
    runtimeOnly("com.h2database:h2")
    // end::h2[]


    implementation "io.vavr:vavr:${vavr}"
    testImplementation("commons-lang:commons-lang:2.6")
//needed by VavrTypes
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
}


application {
    mainClass.set("api.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}
shadowJar {
    zip64 true
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("api.*")
    }
//    testResources {
//        additionalModules.add("jdbc-mysql")
//    }
}

//tag::testLogging[]
test {
    testLogging {
        showStandardStreams = true
    }
}
//end::testLogging[]

